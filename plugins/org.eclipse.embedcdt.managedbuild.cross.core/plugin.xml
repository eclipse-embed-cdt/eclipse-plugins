<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<!-- 
  Copyright (c) 2009, 2011 Wind River Systems, Inc. and others. 
  This program and the accompanying materials 
  are made available under the terms of the Eclipse Public License 2.0 
  which accompanies this distribution, and is available at 
  https://www.eclipse.org/legal/epl-2.0/

  SPDX-License-Identifier: EPL-2.0 
 
  Contributors: 
    Doug Schaefer (Wind River) - initial API and implementation 
    Anna Dushistova (Mentor Graphics)- [329531][crossgcc] crossgcc fails to 
      build a project 
    Liviu Ionescu - MCU version 
-->
<plugin>
	<extension point="org.eclipse.cdt.managedbuilder.core.buildDefinitions">
		<managedBuildRevision fileVersion="4.0.0">
		</managedBuildRevision>
		<tool
			id="ilg.gnumcueclipse.managedbuild.cross.tool.common"
			isAbstract="false"
			name="Common options">
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.target.other"
				isAbstract="true"
				name="%option.target.other"
				useByScannerDiscovery="true"
				valueType="string">
			</option>
			<option
				command="-fsyntax-only"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.warnings.syntaxonly"
				isAbstract="true"
				name="%option.warnings.syntaxonly"
				tip="Check the code for syntax errors, but don’t do anything beyond that."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-pedantic"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.warnings.pedantic"
				isAbstract="true"
				name="%option.warnings.pedantic"
				tip="Issue all the warnings demanded by strict ISO C and ISO C++; reject all programs that use forbidden extensions, and some other programs that do not follow ISO C and ISO C++. For ISO C, follows the version of the ISO C standard specified by any ‘-std’ option used."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-pedantic-errors"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.warnings.pedanticerrors"
				isAbstract="true"
				name="%option.warnings.pedanticerrors"
				tip="Like ‘-pedantic’, except that errors are produced rather than warnings."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Wall"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.warnings.allwarn"
				isAbstract="true"
				name="%option.warnings.allwarn"
				tip="Enable all the warnings about constructions that some users consider questionable, and that are easy to avoid (or modify to prevent the warning), even in conjunction with macros. This also enables some language-specific warnings."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Wextra"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.warnings.extrawarn"
				isAbstract="true"
				name="%option.warnings.extrawarn"
				tip="Enable some extra warning flags that are not enabled by ‘-Wall’."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Wconversion"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.warnings.conversion"
				isAbstract="true"
				name="%option.warnings.conversion"
				tip="Warn for implicit conversions that may alter a value. This includes conversions between real and integer, like abs (x) when x is double; conversions between signed and unsigned, like unsigned ui = -1; and conversions to smaller types, like sqrtf (M_PI). Do not warn for explicit casts like abs ((int) x) and ui = (unsigned) -1, or if the value is not changed by the conversion like in abs (2.0). Warnings about conversions between signed and unsigned integers can be disabled by using ‘-Wno-sign-conversion’."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Wuninitialized"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.warnings.uninitialized"
				isAbstract="true"
				name="%option.warnings.uninitialized"
				tip="Warn if an automatic variable is used without first being initialized or if a variable may be clobbered by a setjmp call. In C++, warn if a non-static reference or non-static ‘const’ member appears in a class without constructors. If you want to warn about code that uses the uninitialized value of the variable in its own initializer, use the ‘-Winit-self’ option. These warnings occur for individual uninitialized or clobbered elements of structure, union or array variables as well as for variables that are uninitialized or clobbered as a whole. They do not occur for variables or elements declared volatile. Because these warnings depend on optimization, the exact variables or elements for which there are warnings depends on the precise optimization options and version of GCC used. Note that there may be no warning about a variable that is used only to compute a value that itself is never used, because such computations may be deleted by data flow analysis before the warnings are printed."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Wunused"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.warnings.unused"
				isAbstract="true"
				name="%option.warnings.unused"
				tip="Warn if various constructs are unused (parameters, functions, labels, etc)."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Wpadded"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.warnings.padded"
				isAbstract="true"
				name="%option.warnings.padded"
				tip="Warn if padding is included in a structure, either to align an element of the structure or to align the whole structure. Sometimes when this happens it is possible to rearrange the fields of the structure to reduce the padding and so make the structure smaller."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Wfloat-equal"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.warnings.floatequal"
				isAbstract="true"
				name="%option.warnings.floatequal"
				tip="Warn if floating-point values are used in equality comparisons. The idea behind this is that sometimes it is convenient (for the programmer) to consider floating-point values as approximations to infinitely precise real numbers. If you are doing this, then you need to compute (by analyzing the code, or in some other way) the maximum or likely maximum error that the computation introduces, and allow for it when performing comparisons (and when producing output, but that’s a different problem). In particular, instead of testing for equality, you should check to see whether the two values have ranges that overlap; and this is done with the relational operators, so equality comparisons are probably mistaken."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Wshadow"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.warnings.shadow"
				isAbstract="true"
				name="%option.warnings.shadow"
				tip="Warn whenever a local variable or type declaration shadows another variable, parameter, type, or class member (in C++), or whenever a built-in function is shadowed. Note that in C++, the compiler warns if a local variable shadows an explicit typedef, but not if it shadows a struct/class/enum."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Wpointer-arith"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.warnings.pointerarith"
				isAbstract="true"
				name="%option.warnings.pointerarith"
				tip="Warn about anything that depends on the “size of” a function type or of void. GNU C assigns these types a size of 1, for convenience in calculations with void * pointers and pointers to functions. In C++, warn also when an arithmetic operation involves NULL. This warning is also enabled by ‘-Wpedantic’."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Wlogical-op"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.warnings.logicalop"
				isAbstract="true"
				name="%option.warnings.logicalop"
				tip="Warn about suspicious uses of logical operators in expressions. This includes using logical operators in contexts where a bit-wise operator is likely to be expected."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Waggregate-return"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.warnings.agreggatereturn"
				isAbstract="true"
				name="%option.warnings.agreggatereturn"
				tip="Warn if any functions that return structures or unions are defined or called. (In languages where you can return an array, this also elicits a warning.)"
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Wmissing-declarations"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.warnings.missingdeclaration"
				isAbstract="true"
				name="%option.warnings.missingdeclaration"
				tip="Warn if a global function is defined without a previous declaration. Do so even if the definition itself provides a prototype. Use this option to detect global functions that are not declared in header files. In C, no warnings are issued for func- tions with previous non-prototype declarations; use ‘-Wmissing-prototype’ to detect missing prototypes. In C++, no warnings are issued for function tem- plates, or for inline functions, or for functions in anonymous namespaces."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Werror"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.warnings.toerrors"
				isAbstract="true"
				name="%option.warnings.toerrors"
				tip="Make all warnings into errors."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-w"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.warnings.nowarn"
				isAbstract="true"
				name="%option.warnings.nowarn"
				tip="Inhibit all warning messages. Not recommended."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.warnings.other"
				isAbstract="true"
				name="%option.warnings.other"
				useByScannerDiscovery="true"
				valueType="string">
			</option>
			<option
				command="-p"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.debugging.prof"
				isAbstract="true"
				name="%option.debugging.prof"
				tip="Generate extra code to write profile information suitable for the analysis program prof. You must use this option when compiling the source files you want data about, and you must also use it when linking."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-pg"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.debugging.gprof"
				isAbstract="true"
				name="%option.debugging.gprof"
				tip="Generate extra code to write profile information suitable for the analysis program gprof. You must use this option when compiling the source files you want data about, and you must also use it when linking."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.debugging.other"
				isAbstract="true"
				name="%option.debugging.other"
				useByScannerDiscovery="true"
				valueType="string">
			</option>
			<option
				command="-fmessage-length=0"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.optimization.messagelength"
				isAbstract="true"
				name="%option.optimization.messagelength"
				tip="Try to format error messages so that they fit on lines of about n characters. The default is 72 characters for g++ and 0 for the rest of the front ends supported by GCC. If n is zero, then no line-wrapping is done; each error message appears on a single line."
				useByScannerDiscovery="true"
				valueType="boolean">
				<enablement
					attribute="value"
					type="CONTAINER_ATTRIBUTE"
					value="true">
				</enablement>
			</option>
			<option
				command="-fsigned-char"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.optimization.signedchar"
				isAbstract="true"
				name="%option.optimization.signedchar"
				tip="Let the type char be signed, like signed char."
				useByScannerDiscovery="true"
				valueType="boolean">
				<enablement
					attribute="value"
					type="CONTAINER_ATTRIBUTE"
					value="true">
				</enablement>
			</option>
			<option
				command="-ffunction-sections"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.optimization.functionsections"
				isAbstract="true"
				name="%option.optimization.functionsections"
				resourceFilter="all"
				tip="Place each function into its own section in the output file if the target supports arbitrary sections. The name of the function determines the section’s name in the output file. Use these options on systems where the linker can perform optimizations to improve locality of reference in the instruction space. Most systems using the ELF object format have linkers with such optimizations."
				useByScannerDiscovery="true"
				valueType="boolean">
				<enablement
					attribute="value"
					type="CONTAINER_ATTRIBUTE"
					value="true">
				</enablement>
			</option>
			<option
				command="-fdata-sections"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.optimization.datasections"
				isAbstract="true"
				name="%option.optimization.datasections"
				resourceFilter="all"
				tip="Place each data item into its own section in the output file if the target supports arbitrary sections. The name of the name of the data item determines the section’s name in the output file. Use these options on systems where the linker can perform optimizations to improve locality of reference in the instruction space. Most systems using the ELF object format have linkers with such optimizations."
				useByScannerDiscovery="true"
				valueType="boolean">
				<enablement
					attribute="value"
					type="CONTAINER_ATTRIBUTE"
					value="true">
				</enablement>
			</option>
			<option
				command="-fno-common"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.optimization.nocommon"
				isAbstract="true"
				name="%option.optimization.nocommon"
				tip="In C code, controls the placement of uninitialized global variables. Unix C compilers have traditionally permitted multiple definitions of such variables in different compilation units by placing the variables in a common block. This is the behavior specified by ‘-fcommon’, and is the default for GCC on most targets. On the other hand, this behavior is not required by ISO C, and on some targets may carry a speed or code size penalty on variable references. The ‘-fno-common’ option specifies that the compiler should place uninitialized global variables in the data section of the object file, rather than generating them as common blocks. This has the effect that if the same variable is declared (without extern) in two different compilations, you get a multiple-definition error when you link them. In this case, you must compile with ‘-fcommon’ instead. Compiling with ‘-fno-common’ is useful on targets for which it provides better performance, or if you wish to verify that the program will work on other systems that always treat uninitialized variable declarations this way."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-fno-inline-functions"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.optimization.noinlinefunctions"
				isAbstract="true"
				name="%option.optimization.noinlinefunctions"
				tip="Do not consider any functions for inlining, even if they are not declared inline."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-ffreestanding"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.optimization.freestanding"
				isAbstract="true"
				name="%option.optimization.freestanding"
				tip="Assert that compilation targets a freestanding environment. This implies ‘-fno-builtin’. A freestanding environment is one in which the standard library may not exist, and program startup may not necessarily be at main. The most obvious example is an OS kernel. This is equivalent to ‘-fno-hosted’."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-fno-builtin"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.optimization.nobuiltin"
				isAbstract="true"
				name="%option.optimization.nobuiltin"
				tip="Don’t recognize built-in functions that do not begin with ‘__builtin_’ as prefix."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-fsingle-precision-constant"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.optimization.spconstant"
				isAbstract="true"
				name="%option.optimization.spconstant"
				tip="Treat floating-point constants as single precision instead of implicitly converting them to double-precision constants."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-fPIC"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.optimization.PIC"
				isAbstract="true"
				name="%option.optimization.PIC"
				tip="If supported for the target machine, emit position-independent code, suitable for dynamic linking and avoiding any limit on the size of the global offset table."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-flto"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.optimization.lto"
				isAbstract="true"
				name="%option.optimization.lto"
				tip="Run the standard link-time optimizer. When invoked with source code, it generates GIMPLE (one of GCC’s internal representations) and writes it to special ELF sections in the object file. When the object files are linked together, all the function bodies are read from these ELF sections and instantiated as if they had been part of the same translation unit."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-fno-move-loop-invariants"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.optimization.nomoveloopinvariants"
				isAbstract="true"
				name="%option.optimization.nomoveloopinvariants"
				tip="Disable the loop invariant motion pass in the RTL loop optimizer. Enabled at level ‘-O1’"
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.optimization.other"
				isAbstract="true"
				name="%option.optimization.other"
				useByScannerDiscovery="true"
				valueType="string">
			</option>
			<option
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.preferxpacksbin"
				isAbstract="true"
				name="%option.preferxpacksbin"
				valueType="boolean">
				<enablement type="UI_VISIBILITY">
					<false> false body text
					</false>
				</enablement>
			</option>
			<option
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.toolchain.createflash"
				isAbstract="true"
				name="%option.toolchain.flash"
				valueHandler="org.eclipse.embedcdt.managedbuild.cross.core.AdditionalToolsManagedOptionValueHandler"
				valueType="boolean">
				<enablement
					attribute="value"
					type="ALL"
					value="true">
					<checkBuildProperty
						property="org.eclipse.cdt.build.core.buildArtefactType"
						value="org.eclipse.cdt.build.core.buildArtefactType.exe">
					</checkBuildProperty>
				</enablement>
				<enablement type="UI_VISIBILITY">
					<false> false body text
					</false>
				</enablement>
			</option>
			<option
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.toolchain.createlisting"
				isAbstract="true"
				name="%option.toolchain.listing"
				valueHandler="org.eclipse.embedcdt.managedbuild.cross.core.AdditionalToolsManagedOptionValueHandler"
				valueType="boolean">
				<enablement
					attribute="value"
					type="ALL"
					value="false">
					<checkBuildProperty
						property="org.eclipse.cdt.build.core.buildArtefactType"
						value="org.eclipse.cdt.build.core.buildArtefactType.exe">
					</checkBuildProperty>
				</enablement>
				<enablement type="UI_VISIBILITY">
					<false> false body text
					</false>
				</enablement>
			</option>
			<option
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.toolchain.printsize"
				isAbstract="true"
				name="%option.toolchain.size"
				valueHandler="org.eclipse.embedcdt.managedbuild.cross.core.AdditionalToolsManagedOptionValueHandler"
				valueType="boolean">
				<enablement
					attribute="value"
					type="ALL"
					value="true">
					<checkBuildProperty
						property="org.eclipse.cdt.build.core.buildArtefactType"
						value="org.eclipse.cdt.build.core.buildArtefactType.exe">
					</checkBuildProperty>
				</enablement>
				<enablement type="UI_VISIBILITY">
					<false> false body text
					</false>
				</enablement>
			</option>
		</tool>
		<tool
			id="ilg.gnumcueclipse.managedbuild.cross.tool.compiler"
			isAbstract="true"
			name="Compiler common options">
			<option
				command="-v"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.verbose"
				isAbstract="true"
				name="%option.compiler.verbose"
				tip="Print (on standard error output) the commands executed to run the stages of compilation. Also print the version number of the compiler driver program and of the preprocessor and the compiler proper."
				valueType="boolean">
			</option>
			<option
				command="--save-temps"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.savetemps"
				isAbstract="true"
				name="%option.compiler.savetemps"
				valueType="boolean">
			</option>
			<option
				command="-nostdinc"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.preprocessor.nostdinc"
				isAbstract="true"
				name="%option.compiler.nostdinc"
				tip="Do not search the standard system directories for header files. Only the directories you have specified with ‘-I’ options (and the directory of the current file, if appropriate) are searched."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-D"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.preprocessor.defs"
				isAbstract="true"
				name="%option.compiler.defs"
				useByScannerDiscovery="true"
				valueType="definedSymbols">
			</option>
			<option
				command="-Wa,-adhlns=&quot;$@.lst&quot;"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.asmlisting"
				isAbstract="true"
				name="%option.compiler.asmlisting"
				valueType="boolean">
			</option>
			<option
				command="-U"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.preprocessor.undefs"
				isAbstract="true"
				name="%option.compiler.undefs"
				useByScannerDiscovery="true"
				valueType="undefDefinedSymbols">
			</option>
			<option
				command="-E"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.preprocessor.preprocessonly"
				isAbstract="true"
				name="%option.compiler.preprocessonly"
				tip="Stop after the preprocessing stage; do not run the compiler proper. The output is in the form of preprocessed source code, which is sent to the standard output. Input files that don’t require preprocessing are ignored."
				valueType="boolean">
			</option>
			<option
				browseType="directory"
				command="-I"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.dirs.include.paths"
				isAbstract="true"
				name="%option.compiler.include.paths"
				useByScannerDiscovery="true"
				valueType="includePath">
			</option>
			<option
				browseType="directory"
				command="-isystem"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.dirs.include.systempaths"
				isAbstract="true"
				name="%option.compiler.include.systempaths"
				useByScannerDiscovery="true"
				valueType="includePath">
			</option>
			<option
				browseType="file"
				command="-include"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.dirs.include.files"
				isAbstract="true"
				name="%option.compiler.include.files"
				useByScannerDiscovery="true"
				valueType="includeFiles">
			</option>
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.compiler.other"
				isAbstract="true"
				name="%option.compiler.other"
				useByScannerDiscovery="true"
				valueType="string">
			</option>
		</tool>
		<tool
			id="ilg.gnumcueclipse.managedbuild.cross.tool.linker"
			isAbstract="true"
			name="Linker common options">
			<option
				command="-Wl,-Map,"
				defaultValue="&quot;${BuildArtifactFileBaseName}.map&quot;"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.mapfilename"
				isAbstract="true"
				name="%option.linker.mapfilename"
				valueType="string">
			</option>
			<option
				browseType="file"
				commandGenerator="org.eclipse.embedcdt.managedbuild.cross.core.LinkerScriptCommandGenerator"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.scriptfile"
				isAbstract="true"
				name="%option.linker.scriptfile"
				valueType="stringList">
			</option>
			<option
				command="-Xlinker --cref"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.cref"
				isAbstract="true"
				name="%option.linker.cref"
				valueType="boolean">
			</option>
			<option
				command="-Xlinker --print-map"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.printmap"
				isAbstract="true"
				name="%option.linker.printmap"
				valueType="boolean">
			</option>
			<option
				command="-nostartfiles"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.nostart"
				isAbstract="true"
				name="%option.linker.nostart"
				valueType="boolean">
			</option>
			<option
				command="-nodefaultlibs"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.nodeflibs"
				isAbstract="true"
				name="%option.linker.nodeflibs"
				valueType="boolean">
			</option>
			<option
				command="-nostdlib"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.nostdlibs"
				isAbstract="true"
				name="%option.linker.nostdlibs"
				valueType="boolean">
			</option>
			<option
				command="-Xlinker --gc-sections"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.gcsections"
				isAbstract="true"
				name="%option.linker.gcsections"
				valueType="boolean">
				<enablement
					attribute="value"
					type="CONTAINER_ATTRIBUTE"
					value="true">
				</enablement>
			</option>
			<option
				command="-Xlinker --print-gc-sections"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.printgcsections"
				isAbstract="true"
				name="%option.linker.printgcsections"
				valueType="boolean">
			</option>
			<option
				command="-s"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.strip"
				isAbstract="true"
				name="%option.linker.strip"
				valueType="boolean">
			</option>
			<option
				browseType="none"
				command="-l"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.libs"
				isAbstract="true"
				commandGenerator="org.eclipse.embedcdt.managedbuild.cross.core.GnuCppLibrariesCommandGenerator"
				name="%option.linker.libs"
				valueType="libs">
			</option>
			<option
				browseType="directory"
				command="-L"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.paths"
				isAbstract="true"
				name="%option.linker.paths"
				valueType="libPaths">
			</option>
			<option
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.libs.group"
				isAbstract="true"
				name="%option.linker.libs.group"
				valueType="boolean">
			</option>
			<option
				command="-Xlinker ${VALUE}"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.flags"
				isAbstract="true"
				name="%option.linker.flags"
				valueType="stringList">
			</option>
			<option
				browseType="file"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.otherobjs"
				isAbstract="true"
				name="%option.linker.otherobjs"
				valueType="userObjs">
			</option>
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.other"
				isAbstract="true"
				name="%option.linker.other"
				valueType="string">
			</option>
			<option
				command="-shared"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.shared"
				isAbstract="true"
				name="%option.linker.shared"
				valueType="boolean">
				<enablement
					attribute="defaultValue"
					extensionAdjustment="false"
					type="CONTAINER_ATTRIBUTE"
					value="true">
					<checkBuildProperty
						property="org.eclipse.cdt.build.core.buildArtefactType"
						value="org.eclipse.cdt.build.core.buildArtefactType.sharedLib">
					</checkBuildProperty>
				</enablement>
			</option>
			<option
				command="-Wl,-soname="
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.soname"
				isAbstract="true"
				name="%option.linker.soname"
				valueType="string">
			</option>
			<option
				command="-Wl,--out-implib="
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.implname"
				isAbstract="true"
				name="%option.linker.implname"
				valueType="string">
			</option>
			<option
				command="-Wl,--output-def="
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.defname"
				isAbstract="true"
				name="%option.linker.defname"
				valueType="string">
			</option>
			<option
				command="--specs=nano.specs"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.usenewlibnano"
				isAbstract="true"
				name="%option.linker.usenewlibnano"
				valueType="boolean">
			</option>
			<option
				command="-u _printf_float"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.useprintffloat"
				isAbstract="true"
				name="%option.linker.useprintffloat"
				valueType="boolean">
			</option>
			<option
				command="-u _scanf_float"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.usescanffloat"
				isAbstract="true"
				name="%option.linker.usescanffloat"
				valueType="boolean">
			</option>
   <option
         command="--specs=nosys.specs"
         defaultValue="false"
         id="ilg.gnumcueclipse.managedbuild.cross.option.base.linker.usenewlibnosys"
         isAbstract="true"
         name="%option.linker.usenewlibnosys"
         valueType="boolean">
   </option>
		</tool>
		<tool
			id="ilg.gnumcueclipse.managedbuild.cross.toolchain"
			isAbstract="true"
			name="Toolchain hidden options">
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.command.prefix"
				isAbstract="true"
				name="%option.toolchain.prefix"
				resourceFilter="all"
				valueType="string">
				<enablement type="UI_VISIBILITY">
					<false> false body text
					</false>
				</enablement>
			</option>
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.command.suffix"
				isAbstract="true"
				name="%option.toolchain.suffix"
				resourceFilter="all"
				valueType="string">
				<enablement type="UI_VISIBILITY">
					<false> false body text
					</false>
				</enablement>
			</option>
			<option
				defaultValue="echo"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.command.c"
				isAbstract="true"
				name="%option.toolchain.command.c"
				resourceFilter="all"
				valueType="string">
				<enablement type="UI_VISIBILITY">
					<false> false body text
					</false>
				</enablement>
			</option>
			<option
				defaultValue="echo"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.command.cpp"
				isAbstract="true"
				name="%option.toolchain.command.cpp"
				resourceFilter="all"
				valueType="string">
				<enablement type="UI_VISIBILITY">
					<false> false body text
					</false>
				</enablement>
			</option>
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.command.ar"
				isAbstract="true"
				name="%option.toolchain.command.ar"
				resourceFilter="all"
				valueType="string">
				<enablement type="UI_VISIBILITY|UI_ENABLEMENT|CMD_USAGE">
					<checkBuildProperty
						property="org.eclipse.cdt.build.core.buildArtefactType"
						value="org.eclipse.cdt.build.core.buildArtefactType.staticLib">
					</checkBuildProperty>
				</enablement>
				<enablement type="UI_VISIBILITY">
					<false> false body text
					</false>
				</enablement>
			</option>
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.command.objcopy"
				isAbstract="true"
				name="%option.toolchain.command.objcopy"
				resourceFilter="all"
				valueType="string">
				<enablement type="UI_VISIBILITY|UI_ENABLEMENT|CMD_USAGE">
					<checkBuildProperty
						property="org.eclipse.cdt.build.core.buildArtefactType"
						value="org.eclipse.cdt.build.core.buildArtefactType.exe">
					</checkBuildProperty>
				</enablement>
				<enablement type="UI_VISIBILITY">
					<false> false body text
					</false>
				</enablement>
			</option>
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.command.objdump"
				isAbstract="true"
				name="%option.toolchain.command.listing"
				resourceFilter="all"
				valueType="string">
				<enablement type="UI_VISIBILITY|UI_ENABLEMENT|CMD_USAGE">
					<checkBuildProperty
						property="org.eclipse.cdt.build.core.buildArtefactType"
						value="org.eclipse.cdt.build.core.buildArtefactType.exe">
					</checkBuildProperty>
				</enablement>
				<enablement type="UI_VISIBILITY">
					<false> false body text
					</false>
				</enablement>
			</option>
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.command.size"
				isAbstract="true"
				name="%option.toolchain.command.size"
				resourceFilter="all"
				valueType="string">
				<enablement type="UI_VISIBILITY|UI_ENABLEMENT|CMD_USAGE">
					<checkBuildProperty
						property="org.eclipse.cdt.build.core.buildArtefactType"
						value="org.eclipse.cdt.build.core.buildArtefactType.exe">
					</checkBuildProperty>
				</enablement>
				<enablement type="UI_VISIBILITY">
					<false> false body text
					</false>
				</enablement>
			</option>
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.command.make"
				isAbstract="true"
				name="%option.toolchain.command.make"
				resourceFilter="all"
				valueType="string">
				<enablement type="UI_VISIBILITY">
					<false> false body text
					</false>
				</enablement>
			</option>
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.command.rm"
				isAbstract="true"
				name="%option.toolchain.command.rm"
				resourceFilter="all"
				valueType="string">
				<enablement type="UI_VISIBILITY">
					<false> false body text
					</false>
				</enablement>
			</option>
			<option
				defaultValue="true"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.toolchain.useglobalpath"
				isAbstract="true"
				name="%option.toolchain.useglobalpath"
				valueHandler="org.eclipse.embedcdt.managedbuild.cross.core.AdditionalToolsManagedOptionValueHandler"
				valueType="boolean">
				<enablement type="UI_VISIBILITY">
					<false> false body text
					</false>
				</enablement>
			</option>
			<option
				browseType="directory"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.toolchain.path"
				isAbstract="true"
				name="%option.toolchain.path"
				resourceFilter="all"
				valueType="string">
				<enablement type="UI_VISIBILITY">
					<false> false body text
					</false>
				</enablement>
			</option>
   <option
         id="ilg.gnumcueclipse.managedbuild.cross.option.base.showDevicesTab"
         isAbstract="true"
         name="showDevicesTab"
         resourceFilter="all"
         valueType="string">
      <enablement
            type="ALL">
         <false>
            false body text
         </false>
      </enablement>
   </option>
		</tool>
		<tool
			id="ilg.gnumcueclipse.managedbuild.cross.tool.assembler"
			isAbstract="true"
			name="Cross Assembler common options">
			<option
				command="-x assembler-with-cpp"
				commandFalse="-x assembler"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.assembler.usepreprocessor"
				isAbstract="true"
				name="%option.assembler.usepreprocessor"
				valueType="boolean">
				<enablement
					attribute="value"
					type="CONTAINER_ATTRIBUTE"
					value="true">
				</enablement>
			</option>
			<option
				command="-Xassembler ${VALUE}"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.assembler.flags"
				isAbstract="true"
				name="%option.assembler.flags"
				valueType="stringList">
			</option>
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.assembler.other"
				isAbstract="true"
				name="%option.assembler.other"
				valueType="string">
			</option>
		</tool>
		<tool
			id="ilg.gnumcueclipse.managedbuild.cross.tool.c.compiler"
			isAbstract="true"
			name="Cross C Compiler common options">
			<option
				command="-Wmissing-prototypes"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.c.compiler.warning.missingprototypes"
				isAbstract="true"
				name="%option.warnings.missingprototypes"
				tip="Warn if a global function is defined without a previous prototype declaration. This warning is issued even if the definition itself provides a prototype. Use this option to detect global functions that do not have a matching prototype declaration in a header file."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Wstrict-prototypes"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.c.compiler.warning.strictprototypes"
				isAbstract="true"
				name="%option.warnings.strictprototypes"
				tip="Warn if a function is declared or defined without specifying the argument types. (An old-style function definition is permitted without a warning if preceded by a declaration that specifies the argument types.)"
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Wbad-function-cast"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.c.compiler.warning.badfunctioncast"
				isAbstract="true"
				name="%option.warnings.badfunctioncast"
				tip="Warn whenever a function call is cast to a non-matching type. For example, warn if int malloc() is cast to anything *."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
		</tool>
		<tool
			id="ilg.gnumcueclipse.managedbuild.cross.tool.cpp.compiler"
			isAbstract="true"
			name="Cross C++ Compiler common options">
			<option
				command="-nostdinc++"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.cpp.compiler.nostdincpp"
				isAbstract="true"
				name="%option.compiler.nostdincpp"
				tip="Do not search for header files in the C++-specific standard directories, but do still search the other standard directories."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-fno-exceptions"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.cpp.compiler.noexceptions"
				isAbstract="true"
				name="%option.cpp.compiler.noexceptions"
				tip="Do not generates extra code needed to propagate exceptions."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-fno-rtti"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.cpp.compiler.nortti"
				isAbstract="true"
				name="%option.cpp.compiler.nortti"
				tip="Disable generation of information about every class with virtual functions for use by the C++ run-time type identification features (‘dynamic_cast’ and ‘typeid’). If you don’t use those parts of the language, you can save some space by using this flag. Note that exception handling uses the same information, but G++ generates it as needed. The ‘dynamic_cast’ operator can still be used for casts that do not require run-time type information, i.e. casts to void * or to unambiguous base classes."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-fno-use-cxa-atexit"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.cpp.compiler.nousecxaatexit"
				isAbstract="true"
				name="%option.cpp.compiler.nousecxaatexit"
				tip="Do not register destructors for objects with static storage duration with the __cxa_ atexit() function."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-fno-threadsafe-statics"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.cpp.compiler.nothreadsafestatics"
				isAbstract="true"
				name="%option.cpp.compiler.nothreadsafestatics"
				tip="Do not emit the extra code to use the routines specified in the C++ ABI for thread-safe initialization of local statics. You can use this option to reduce code size slightly in code that doesn’t need to be thread-safe."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Wabi"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.cpp.compiler.warnabi"
				isAbstract="true"
				name="%option.compiler.warnabi"
				tip="Warn when G++ generates code that is probably not compatible with the vendor-neutral C++ ABI. Although an effort has been made to warn about all such cases, there are probably some cases that are not warned about, even though G++ is generating incompatible code. There may also be cases where warnings are emitted even though the code that is generated is compatible."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Wctor-dtor-privacy"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.cpp.compiler.warning.ctordtorprivacy"
				isAbstract="true"
				name="%option.compiler.warning.ctordtorprivacy"
				tip="Warn when a class seems unusable because all the constructors or destructors in that class are private, and it has neither friends nor public static member functions. Also warn if there are no non-private methods, and there’s at least one private member function that isn’t a constructor or destructor."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Wnoexcept"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.cpp.compiler.warning.noexcept"
				isAbstract="true"
				name="%option.compiler.warning.noexcept"
				tip="Warn when a noexcept-expression evaluates to false because of a call to a function that does not have a non-throwing exception specification (i.e. ‘throw()’ or ‘noexcept’) but is known by the compiler to never throw an exception."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Wnon-virtual-dtor"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.cpp.compiler.warning.nonvirtualdtor"
				isAbstract="true"
				name="%option.compiler.warning.nonvirtualdtor"
				tip="Warn when a class has virtual functions and an accessible non-virtual destructor, in which case it is possible but unsafe to delete an instance of a derived class through a pointer to the base class. This warning is also enabled if ‘-Weffc++’ is specified."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Wstrict-null-sentinel"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.cpp.compiler.warning.strictnullsentinel"
				isAbstract="true"
				name="%option.compiler.warning.strictnullsentinel"
				tip="Warn about the use of an uncasted NULL as sentinel. When compiling only with GCC this is a valid sentinel, as NULL is defined to __null. Although it is a null pointer constant rather than a null pointer, it is guaranteed to be of the same size as a pointer. But this use is not portable across different compilers."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Wsign-promo"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.cpp.compiler.warning.signpromo"
				isAbstract="true"
				name="%option.compiler.warning.signpromo"
				tip="Warn when overload resolution chooses a promotion from unsigned or enumerated type to a signed type, over a conversion to an unsigned type of the same size. Previous versions of G++ tried to preserve unsignedness, but the standard mandates the current behavior."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
			<option
				command="-Weffc++"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.cpp.compiler.warneffc"
				isAbstract="true"
				name="%option.compiler.warneffc"
				tip="Warn about violations of the style guidelines from Scott Meyers’ Effective C++, Second Edition book."
				useByScannerDiscovery="true"
				valueType="boolean">
			</option>
		</tool>
		<tool
			id="ilg.gnumcueclipse.managedbuild.cross.tool.c.linker"
			isAbstract="true"
			name="Cross C Linker common options">
		</tool>
		<tool
			id="ilg.gnumcueclipse.managedbuild.cross.tool.cpp.linker"
			isAbstract="true"
			name="Cross C++ Linker common options">
		</tool>
		<tool
			id="ilg.gnumcueclipse.managedbuild.cross.tool.archiver"
			isAbstract="true"
			name="Cross Archiver common options">
		</tool>
		<tool
			id="ilg.gnumcueclipse.managedbuild.cross.tool.createflash"
			isAbstract="true"
			name="Cross Create Flash Image common options">
			<option
				command="-j .text"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.createflash.textsection"
				isAbstract="true"
				name="%option.flash.textsections"
				resourceFilter="all"
				tip="Copy only the named section from the input file to the output file. This option may be given more than once."
				valueType="boolean">
			</option>
			<option
				command="-j .data"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.createflash.datasection"
				isAbstract="true"
				name="%option.flash.datasections"
				resourceFilter="all"
				tip="Copy only the named section from the input file to the output file. This option may be given more than once."
				valueType="boolean">
			</option>
			<option
				command="-j "
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.createflash.othersection"
				isAbstract="true"
				name="%option.flash.othersections"
				resourceFilter="all"
				tip="Copy only the named section from the input file to the output file. This option may be given more than once."
				valueType="stringList">
			</option>
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.createflash.other"
				isAbstract="true"
				name="%option.flash.other"
				valueType="string">
			</option>
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.createflash.InFileName"
				resourceFilter="all"
				value="&quot;${BuildArtifactFileName}&quot;"
				valueType="string">
			</option>
		</tool>
		<tool
			id="ilg.gnumcueclipse.managedbuild.cross.tool.createlisting"
			isAbstract="true"
			name="Cross Create Listing common options">
			<option
				command="--source"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.createlisting.source"
				isAbstract="true"
				name="%option.listing.source"
				resourceFilter="all"
				tip="Display source code intermixed with disassembly, if possible. Implies -d."
				valueType="boolean">
				<enablement
					attribute="value"
					type="CONTAINER_ATTRIBUTE"
					value="true">
				</enablement>
			</option>
			<option
				command="--all-headers"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.createlisting.allheaders"
				isAbstract="true"
				name="%option.listing.allheaders"
				resourceFilter="all"
				tip="Display all available header information, including the symbol table and relocation entries. Using -x is equivalent to specifying all of -a -f -h -p -r -t."
				valueType="boolean">
				<enablement
					attribute="value"
					type="CONTAINER_ATTRIBUTE"
					value="true">
				</enablement>
			</option>
			<option
				command="--demangle"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.createlisting.demangle"
				isAbstract="true"
				name="%option.listing.demangle"
				resourceFilter="all"
				tip="Decode (demangle) low-level symbol names into user-level names. Besides removing any initial underscore prepended by the system, this makes C++ function names readable."
				valueType="boolean">
				<enablement
					attribute="value"
					type="CONTAINER_ATTRIBUTE"
					value="true">
				</enablement>
			</option>
			<option
				command="--debugging"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.createlisting.debugging"
				isAbstract="true"
				name="%option.listing.debugging"
				resourceFilter="all"
				tip="Display debugging information. This attempts to parse STABS and IEEE debugging format information stored in the file and print it out using a C like syntax. If neither of these formats are found this option falls back on the -W option to print any DWARF information in the file."
				valueType="boolean">
			</option>
			<option
				command="--disassemble"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.createlisting.disassemble"
				isAbstract="true"
				name="%option.listing.disassemble"
				resourceFilter="all"
				tip="Display the assembler mnemonics for the machine instructions from objfile. This option only disassembles those sections which are expected to contain instructions."
				valueType="boolean">
			</option>
			<option
				command="--file-headers"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.createlisting.fileheaders"
				isAbstract="true"
				name="%option.listing.fileheaders"
				resourceFilter="all"
				tip="Display summary information from the overall header of each of the objfile files."
				valueType="boolean">
			</option>
			<option
				command="--line-numbers"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.createlisting.linenumbers"
				isAbstract="true"
				name="%option.listing.linenumbers"
				resourceFilter="all"
				tip="Label the display (using debugging information) with the filename and source line numbers corresponding to the object code or relocs shown. Only useful with -d, -D, or -r."
				valueType="boolean">
				<enablement
					attribute="value"
					type="CONTAINER_ATTRIBUTE"
					value="true">
				</enablement>
			</option>
			<option
				command="--reloc"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.createlisting.reloc"
				isAbstract="true"
				name="%option.listing.reloc"
				resourceFilter="all"
				tip="Print the relocation entries of the file. If used with -d or -D, the relocations are printed interspersed with the disassembly."
				valueType="boolean">
			</option>
			<option
				command="--syms"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.createlisting.symbols"
				isAbstract="true"
				name="%option.listing.symbols"
				resourceFilter="all"
				tip="Print the symbol table entries of the file. This is similar to the information provided by the `nm&apos; program, although the display format is different. The format of the output depends upon the format of the file being dumped."
				valueType="boolean">
			</option>
			<option
				command="--wide"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.createlisting.wide"
				isAbstract="true"
				name="%option.listing.wide"
				resourceFilter="all"
				tip="Format some lines for output devices that have more than 80 columns. Also do not truncate symbol names when they are displayed."
				valueType="boolean">
				<enablement
					attribute="value"
					type="CONTAINER_ATTRIBUTE"
					value="true">
				</enablement>
			</option>
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.createlisting.other"
				isAbstract="true"
				name="%option.listing.other"
				valueType="string">
			</option>
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.createlisting.InFileName"
				resourceFilter="all"
				value="&quot;${BuildArtifactFileName}&quot;"
				valueType="string">
			</option>
		</tool>
		<tool
			id="ilg.gnumcueclipse.managedbuild.cross.tool.printsize"
			isAbstract="true"
			name="Cross Print Size common options">
			<option
				command="-x"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.printsize.hex"
				isAbstract="true"
				name="%option.print.hex"
				tip="The size of each section is given in hexadecimal."
				valueType="boolean">
				<enablement type="UI_ENABLEMENT|CMD_USAGE">
					<checkOption
						holderId="ilg.gnumcueclipse.managedbuild.cross.riscv.tool.printsize"
						isRegex="false"
						optionId="ilg.gnumcueclipse.managedbuild.cross.riscv.option.printsize.format"
						value="ilg.gnumcueclipse.managedbuild.cross.riscv.option.printsize.format.berkeley">
					</checkOption>
				</enablement>
			</option>
			<option
				command="--totals"
				defaultValue="false"
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.printsize.totals"
				isAbstract="true"
				name="%option.print.totals"
				tip="Show totals of all objects listed (Berkeley format listing mode only). "
				valueType="boolean">
			</option>
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.printsize.other"
				isAbstract="true"
				name="%option.print.other"
				valueType="string">
			</option>
			<option
				id="ilg.gnumcueclipse.managedbuild.cross.option.base.printsize.InFileName"
				resourceFilter="all"
				value="&quot;${BuildArtifactFileName}&quot;"
				valueType="string">
			</option>
		</tool>
	</extension>

	<extension point="org.eclipse.core.runtime.preferences">
		<initializer
			class="org.eclipse.embedcdt.managedbuild.cross.core.DefaultPreferenceInitializer">
		</initializer>
	</extension>

	<extension point="org.eclipse.core.expressions.propertyTesters">
		<propertyTester
			class="org.eclipse.embedcdt.managedbuild.cross.core.GnuMcuPropertyTester"
			id="org.eclipse.embedcdt.managedbuild.cross.core.propertyTester"
			namespace="org.eclipse.embedcdt.managedbuild.cross.core"
			properties="isGnuMcu"
			type="java.lang.Object">
		</propertyTester>
	</extension>

</plugin>
